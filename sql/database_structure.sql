-- MySQL Script generated by MySQL Workbench
-- Sat Feb 20 18:09:52 2016
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema pillbox
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema pillbox
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `pillbox` DEFAULT CHARACTER SET utf8mb4 ;
USE `pillbox` ;

-- -----------------------------------------------------
-- Table `pillbox`.`accounts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pillbox`.`accounts` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NULL,
  `password` VARCHAR(255) NULL COMMENT 'Will be stored hashed.',
  `email` VARCHAR(255) NULL,
  `salt` VARCHAR(255) NULL COMMENT 'The salt the password was hashed with.',
  `time` DATETIME NULL COMMENT 'When the account was created.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pillbox`.`medication_log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pillbox`.`medication_log` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `medication_id` INT NULL COMMENT 'This is the ID of the medication in ‘medications’.',
  `quantity` DOUBLE NULL COMMENT 'How much has been taken.',
  `time_taken` DATETIME NULL COMMENT 'Time the medication was taken.',
  `status` INT NULL COMMENT '0 = Use time_taken to know whether it was taken or not, and possibly missed.\n1 = Skipped.',
  `note` VARCHAR(255) NULL COMMENT 'Any notes that the user might want to add as to why they have taken it (e.g. “Headache”).',
  `time` DATETIME NULL COMMENT 'This is solely for the record.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pillbox`.`medications`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pillbox`.`medications` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NULL COMMENT 'Point to user ID',
  `name` VARCHAR(45) NULL COMMENT 'Medication name as written on the packaging.',
  `active_agent` VARCHAR(45) NULL COMMENT 'For advanced users, hidden by default.',
  `dosage_package` DOUBLE NULL DEFAULT 0 COMMENT 'The dosage written on the package.\n0 = not specified / unit',
  `dosage_package_unit` VARCHAR(45) NULL COMMENT 'The unit on the package (for e.g. mg, ml).',
  `dosage_to_take` DOUBLE NULL DEFAULT 0 COMMENT 'The dosage the user was prescribed to take.',
  `dosage_to_take_unit` VARCHAR(45) NULL DEFAULT 0 COMMENT 'Whatever unit the user would like to use (e.g. mg, ml, pills, drops etc.)',
  `colour` INT NULL DEFAULT 0 COMMENT 'Store RGB hex code (e.g. FFFFFF)\n0 = not specified / default',
  `shape` INT NULL DEFAULT 0 COMMENT '0 = not specified / default',
  `food_instructions` INT NULL DEFAULT 0 COMMENT '0 = none\n1 = before meal\n2 = with meal\n3 = after meal',
  `indication` VARCHAR(255) NULL COMMENT 'Whatever indication user wants to specify, for e.g. “When having pain”.',
  `minimum_spacing` DOUBLE NULL DEFAULT 0 COMMENT 'Any number the user wants to specify.',
  `minimum_spacing_unit` VARCHAR(45) NULL DEFAULT 0 COMMENT 'Whatever unit the user wants to specify (e.g. minutes, hours, days).',
  `maximum_dosage` DOUBLE NULL COMMENT 'Any number the user wants to specify.',
  `maximum_dosage_unit` VARCHAR(45) NULL COMMENT 'Whatever unit the user wants to specify (e.g. mg, ml, pills, drops).',
  `schedule` TINYINT(1) NULL DEFAULT 0 COMMENT 'Whether this medication is on a schedule or not.',
  `schedule_id` INT NULL COMMENT 'Point to schedule group ID.',
  `note` VARCHAR(255) NULL COMMENT 'Any additional notes the user might want to store.',
  `time` DATETIME NULL COMMENT 'When this medication was added, just for the record.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pillbox`.`schedule`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pillbox`.`schedule` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `group_id` INT NULL COMMENT 'Group ID to have multiple schedules run as one in parallel.',
  `type` INT NULL DEFAULT 0 COMMENT '0 = not specified\n1 = intervals\n2 = times\n3 = single (fixed) time\n\nIntervals:\nFor example every 1h.\nStore 3600 into ‘interval’.\n\nTimes:\nFor example twice daily.\nStore 2 into ‘times’.\nStart from schedule_start and distribute dosages evenly.\n\nSingle (fixed) time:\nUse the time from schedule_start and repeat it until the day of schedule_end.\n\nMore than one fixed time:\nSimply create multiple entries with the same group_id using type 3.',
  `schedule_start` DATETIME NULL COMMENT 'When the schedule will be effective.',
  `times` INT NULL DEFAULT 0 COMMENT 'How many times to take per day (for e.g. 3 for three times a day).\n0 = not using times.',
  `schedule_end` DATETIME NULL COMMENT 'When the schedule ends (for e.g. medication intake ends).',
  `interval` INT NULL DEFAULT 0 COMMENT 'Interval in seconds.\n0 = not using intervals',
  `time` DATETIME NULL COMMENT 'When the user created the schedule, just for the record.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pillbox`.`measurements`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pillbox`.`measurements` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NULL DEFAULT 0 COMMENT 'Point to user ID. If this value is smaller than 1, it is likely an entry that can be trashed.',
  `name` VARCHAR(45) NULL COMMENT 'Measurement name, for e.g. “weight”, “blood sugar”, etc. as specified by the user.',
  `unit` VARCHAR(45) NULL COMMENT 'Measurement unit as specified by the user (e.g. Kg, Pounds, cm).',
  `time` DATETIME NULL COMMENT 'This is solely for the record.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pillbox`.`measurement_log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pillbox`.`measurement_log` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `measurement_id` INT NULL COMMENT 'Points to the measurement ID in ‘measurements’.',
  `measurement` DOUBLE NULL COMMENT 'The actual measurement, any number.',
  `time_measured` DATETIME NULL COMMENT 'When the measurement was taken.',
  `time` DATETIME NULL COMMENT 'This is solely for the record.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
